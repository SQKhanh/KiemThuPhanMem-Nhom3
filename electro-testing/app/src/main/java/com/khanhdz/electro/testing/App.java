/*
 * This source file was generated by the Gradle 'init' task
 */
package com.khanhdz.electro.testing;

import java.io.PrintStream;
import java.time.Duration;
import java.util.List;
import java.util.Random;
import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class App {

    static {
        try {
            System.setOut(new PrintStream(System.out, true, "UTF-8"));
            System.setErr(new PrintStream(System.err, true, "UTF-8"));

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void main(String[] args) throws InterruptedException {
        App app = new App();
        app.run();
    }

    final WebDriver driver;
    final WebDriverWait wait;

    private App() {
        // Tạo một đối tượng WebDriver
        driver = new ChromeDriver();
        wait = new WebDriverWait(driver, Duration.ofSeconds(3)); // Thay đổi thời gian nếu cần
    }

    private void run() {
        login();
        employeeCreate();
    }

    private void login() {
        driver.get("http://localhost:3000/admin");

        // Tìm phần tử tên tài khoản bằng class hoặc placeholder
        WebElement usernameInput = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("input[placeholder='Nhập tên tài khoản của bạn']")));
        usernameInput.sendKeys("admin"); // Thay "ten_tai_khoan" bằng tên tài khoản của bạn

        // Tìm phần tử mật khẩu bằng class hoặc placeholder
        WebElement passwordInput = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("input[placeholder='Nhập mật khẩu của bạn']")));
        passwordInput.sendKeys("123123"); // Thay "mat_khau" bằng mật khẩu của bạn

        // Tìm nút đăng nhập và gửi form
        WebElement loginButton = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("button.mantine-Button-filled")));
        loginButton.click(); // Nhấn nút đăng nhập

        // Tìm thông báo lỗi bằng class
        WebElement errorMessage = wait.until(ExpectedConditions.visibilityOfElementLocated(By.cssSelector("div.mantine-Notification-description")));
        System.out.println("Trạng thái đăng nhập: " + errorMessage.getText());

        switch (errorMessage.getText()) {
            case "Đăng nhập thành công":
                System.out.println("Đăng nhập ok");
                break;
            default:
                driver.quit(); // Đóng trình duyệt sau khi hoàn tất
                break;
        }
    }

    private void employeeCreate() {
        driver.get("http://localhost:3000/admin/employee/create");

        // Điền tên đăng nhập bằng cách tìm kiếm theo nhãn
        WebElement usernameInput = wait.until(ExpectedConditions.visibilityOfElementLocated(
                By.xpath("//label[text()='Tên đăng nhập']/following-sibling::div/input")));
        usernameInput.sendKeys("ten_dang_nhap"); // Nhập tên đăng nhập

        // Điền mật khẩu bằng cách tìm kiếm theo nhãn
        WebElement passwordInput = wait.until(ExpectedConditions.visibilityOfElementLocated(
                By.xpath("//label[text()='Mật khẩu']/following-sibling::div/div/input")));
        passwordInput.sendKeys("mat_khau"); // Nhập mật khẩu

        // Điền họ và tên
        WebElement fullNameInput = wait.until(ExpectedConditions.visibilityOfElementLocated(
                By.xpath("//label[text()='Họ và tên']/following-sibling::div/input")));
        fullNameInput.sendKeys("Nguyễn Văn A");

        // Điền email
        WebElement emailInput = wait.until(ExpectedConditions.visibilityOfElementLocated(
                By.xpath("//label[text()='Email']/following-sibling::div/input")));
        emailInput.sendKeys("nguyenvana@example.com");

        // Điền số điện thoại
        WebElement phoneInput = wait.until(ExpectedConditions.visibilityOfElementLocated(
                By.xpath("//label[text()='Số điện thoại']/following-sibling::div/input")));
        phoneInput.sendKeys("0123456789");

        // Chọn Giới tính
        WebElement genderInput = wait.until(ExpectedConditions.visibilityOfElementLocated(
                By.xpath("//label[text()='Giới tính']/following-sibling::div")));
        genderInput.click(); // Nhấn vào div chứa dropdown để mở nó

        // Chọn "Nam" từ dropdown (có thể điều chỉnh nếu cần)
        WebElement genderOption = wait.until(ExpectedConditions.visibilityOfElementLocated(
                By.xpath("//div[contains(@class, 'mantine-Select-dropdown')]//div[text()='Nữ']")));
        genderOption.click(); // Nhấn vào tùy chọn giới tính

        // Tìm tất cả các phần tử input trong select "Tỉnh thành"
        
        
        List<WebElement> inputs = driver.findElements(By.xpath("//div[@class='mantine-Select-root']//input[@type='search']"));

        // Kiểm tra nếu có ít nhất một phần tử
        if (!inputs.isEmpty()) {
            // Chọn ngẫu nhiên một phần tử
            Random random = new Random();
            int randomIndex = random.nextInt(inputs.size());
            WebElement randomInput = inputs.get(randomIndex);

            // Nhập dữ liệu vào trường input
            randomInput.sendKeys("Đà Nẵng"); // Ví dụ nhập "Đà Nẵng"
            System.out.println("Đã nhập vào trường: " + randomInput.getAttribute("id"));

            // Tùy chọn: Nhấn Enter để thực hiện tìm kiếm
            randomInput.sendKeys(Keys.RETURN);
        } else {
            System.out.println("Không tìm thấy phần tử input nào.");
        }

    }

}
